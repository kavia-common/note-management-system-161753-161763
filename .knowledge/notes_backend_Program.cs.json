{"is_source_file": true, "format": "C#", "description": "This file is the main entry point for the Notes backend API built with ASP.NET Core. It configures services, middleware, endpoints for user registration, login, and CRUD operations for notes, integrates EF Core for data access, JWT for authentication, and OpenAPI/Swagger for API documentation.", "external_files": ["Microsoft.EntityFrameworkCore", "Microsoft.IdentityModel.Tokens", "System.Text", "System.Security.Cryptography", "System.Linq", "System.Threading.Tasks", "NSwag", "NSwag.Generation.Processors.Security"], "external_methods": ["builder.Services.AddControllers", "builder.Services.AddDbContext", "builder.Services.AddAuthentication", "builder.Services.AddAuthorization", "builder.Services.AddCors", "builder.Services.AddEndpointsApiExplorer", "builder.Services.AddOpenApiDocument", "db.Database.Migrate", "db.Users.Any", "db.Users.Add", "app.UseCors", "app.UseOpenApi", "app.UseSwaggerUi", "app.UseAuthentication", "app.UseAuthorization", "app.MapGet", "app.MapPost", "app.MapGroup", "app.MapDelete", "app.MapPut", "app.Run"], "published": ["NotesBackend.Program", "User", "Note", "UserDto", "NoteDto", "RegisterRequest", "LoginRequest", "AuthResponse", "CreateNoteRequest", "UpdateNoteRequest", "ErrorResponse", "PasswordHasher", "ClaimsPrincipalExtensions", "TokenService", "IUserRepository", "UserRepository", "INoteRepository", "NoteRepository", "INoteService", "NoteService"], "classes": [{"name": "AppDbContext", "description": "Entity Framework Core DbContext defining database sets and schema configuration for User and Note entities."}, {"name": "User", "description": "Represents a user account with properties such as Id, Email, DisplayName, PasswordHash, and creation timestamp."}, {"name": "Note", "description": "Represents a note with properties such as Id, UserId, Title, Content, IsArchived, and timestamps for creation and updates."}, {"name": "UserDto", "description": "Data Transfer Object for exposing user information externally."}, {"name": "NoteDto", "description": "Data Transfer Object for exposing note information externally."}, {"name": "ErrorResponse", "description": "Standard error message structure for API responses."}, {"name": "PasswordHasher", "description": "Implementation of password hashing and verification using PBKDF2."}, {"name": "ClaimsPrincipalExtensions", "description": "Extension methods for extracting user information from ClaimsPrincipal."}, {"name": "TokenService", "description": "Generates JWT tokens for authenticated users."}, {"name": "IUserRepository", "description": "Repository interface for user data access operations."}, {"name": "UserRepository", "description": "Implementation of IUserRepository using Entity Framework Core."}, {"name": "INoteRepository", "description": "Repository interface for note data access operations."}, {"name": "NoteRepository", "description": "Implementation of INoteRepository using Entity Framework Core."}, {"name": "INoteService", "description": "Service interface for note business logic."}, {"name": "NoteService", "description": "Implementation of INoteService coordinating note operations and repository interactions."}], "methods": [{"name": "HashPassword", "description": "Hashes a password using PBKDF2 with salt."}, {"name": "VerifyHashedPassword", "description": "Verifies a provided password against a hashed value."}, {"name": "CreateToken", "description": "Creates a JWT token for a user with claims."}, {"name": "GetUserId", "description": "Extracts the user GUID from claims principal."}, {"name": "GetByEmailAsync", "description": "Fetches a user by email asynchronously."}, {"name": "AddAsync", "description": "Adds a user or note entity to the database."}, {"name": "GetAllByUserAsync", "description": "Retrieves all notes for a specified user."}, {"name": "GetByIdAsync", "description": "Retrieves a note by its ID scoped to a user."}, {"name": "UpdateAsync", "description": "Updates a note in the database."}, {"name": "DeleteAsync", "description": "Deletes a note by id for a specific user."}], "search-terms": ["Program.cs", "ASP.NET Core", "JWT authentication", "EF Core", "SQLite", "Notes API", "Swagger", "OpenAPI", "Notes backend", "User registration", "Note CRUD", "Authorization", "ClaimsPrincipal", "Password Hashing", "Token Creation"], "state": 2, "file_id": 2, "knowledge_revision": 21, "git_revision": "68b3f05f7b01c548f269b1ebe4d637cb33eea5c0", "revision_history": [{"11": "68b3f05f7b01c548f269b1ebe4d637cb33eea5c0"}, {"12": "68b3f05f7b01c548f269b1ebe4d637cb33eea5c0"}, {"16": "68b3f05f7b01c548f269b1ebe4d637cb33eea5c0"}, {"17": "68b3f05f7b01c548f269b1ebe4d637cb33eea5c0"}, {"18": "68b3f05f7b01c548f269b1ebe4d637cb33eea5c0"}, {"19": "68b3f05f7b01c548f269b1ebe4d637cb33eea5c0"}, {"20": "68b3f05f7b01c548f269b1ebe4d637cb33eea5c0"}, {"21": "68b3f05f7b01c548f269b1ebe4d637cb33eea5c0"}], "hash": "22f98d7d1f25d2131508a2aacb6a923c", "format-version": 4, "code-base-name": "notes_backend", "filename": "notes_backend/Program.cs"}